import Image from 'next/image'
import Link from 'next/link';
import styles from '../styles/components/Sidebar.module.css';
import Head from 'next/head';
import { useState } from 'react';


interface PropsData {
    active: String,
    roleId: Number,
    children: React.ReactNode,
}

interface linkElement {
    icon: string,
    activeCheck: string,
    link: string,
    text: string
}

const Sidebar = (props: PropsData) => {
    const [showNavBar, setShowNavBar] = useState(false);
    let activeElement = props.active;
    
    const adminLinks = [
        {
            icon: 'bx-home',
            activeCheck: 'Home',
            link: '',
            text: 'Dashboard',
        },
        {
            icon: 'bxs-user',
            activeCheck: 'Users',
            link: 'users',
            text: 'Benutzer',
        },
    ];

    const playerLinks = [
        {
            icon: 'bx-home',
            activeCheck: 'Home',
            link: '',
            text: 'Dashboard',
        },
        {
            icon: 'bxs-game',
            activeCheck: 'Game',
            link: 'game',
            text: 'Spielen',
        },
    ];

    const getToggleIcon = () => {
        return (showNavBar)? 'bx bx-x': 'bx bx-menu';
    };

    const getNavBarStyle = () => {
        return (showNavBar)? styles.lNavbar + " " + styles.show:  styles.lNavbar;
    }

    const getBodyPadding = () => {
        return (showNavBar)? styles.bodyPd :  "";
    }

    const getLinks = () => {
        let elementsToIterateOver: Array<linkElement> = [];

        switch(props.roleId){
            case 1:
                elementsToIterateOver = adminLinks;
                break;
            case 2:
                elementsToIterateOver = playerLinks;
                break;

            default:
                elementsToIterateOver = [];
        }


        let elementsContent = elementsToIterateOver.map((element: linkElement, key: number) => {
            let isElementActive = (activeElement == element.activeCheck)? styles.active: "";
            let isIconActive = (activeElement == element.activeCheck)? styles.activeicon: "";
            
            return (
                <Link href={"/" + element.link} key={key} shallow={false}>
                    <div className={styles.nav_link + " " + isElementActive}> 
                        <i className={`bx ${element.icon} ${styles.nav_icon} ${isIconActive}`}></i>
                        <span className={styles.nav_name}>{element.text}</span> 
                    </div> 
                </Link>
            );
        });
        

        return elementsContent;
    }

    return (
        <div className={styles.container}>
                <Head>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                    <link href='https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css' rel='stylesheet' />
                    <link href='https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css' rel='stylesheet'>
                    </link>
                </Head>
                <main id="body-pd" className={styles.sidebarContainer + " " + getBodyPadding()}>
                    <header className={styles.header + " " + getBodyPadding()} id="header">
                        <div className={styles.header_toggle}> 
                            <i className={getToggleIcon()} onClick={() => {setShowNavBar(!showNavBar)}} id="header-toggle"></i>
                        </div>
                    </header>
                    <div className={getNavBarStyle()} id="nav-bar">
                        <nav className={styles.nav}>
                            <div>
                            <div className={styles.nav_logo}> 
                                <Image alt='PSQ Logo' src="/logo.png" className={styles.nav_icon} width={50} height={50}/>
                            </div>

                            <div className={styles.nav_list}>
                                {getLinks()}
                            </div>
                        </div>

                        <Link passHref href="/logout">
                            <div className={`${styles.nav_link} ${styles.logout_link}`}> 
                                <i className={`bx bx-log-out ${styles.nav_icon}`}></i>
                                <span className={styles.nav_name}>Ausloggen</span> 
                            </div> 
                        </Link>
                    </nav>
                </div>
                <div className={`height-100 ${styles.mainContent}`}>
                    {props.children}
                </div>
            </main>
        </div>
    );
}

export default Sidebar;